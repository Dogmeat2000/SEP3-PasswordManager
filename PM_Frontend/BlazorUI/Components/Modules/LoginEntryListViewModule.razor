@using Shared.Dtos
@code {
    [Parameter]
    public List<LoginEntryDTO> Entries { get; set; }
    
    [Parameter]
    public string Category { get; set; }
    
    // For selecting entry to edit
    [Parameter]
    public EventCallback<LoginEntryDTO> OnEntrySingleClicked { get; set; }
    [Parameter]
    public EventCallback<LoginEntryDTO> OnEntryDoubleClicked { get; set; }
    
    private LoginEntryDTO selectedEntry;
    private bool singleClickHandled;
    private System.Timers.Timer clickTimer;
    private bool _fullyLoaded = false;
    private string _loadingMsg = String.Empty;
    
    public LoginEntryListViewModule()
    {
        // Indstil timeren til forsinkelse (200 ms)
        clickTimer = new System.Timers.Timer(200);
        clickTimer.Elapsed += (sender, e) =>
        {
            clickTimer.Stop();
            if (singleClickHandled)
            {
                InvokeAsync(() => OnEntrySingleClicked.InvokeAsync(selectedEntry));
                singleClickHandled = false;
            }
        };
    }

    private void HandleClick(LoginEntryDTO entry)
    {
        selectedEntry = entry;
        singleClickHandled = true;
        clickTimer.Start();
    }

    private void HandleDoubleClick(LoginEntryDTO entry)
    {
        clickTimer.Stop();
        singleClickHandled = false;
        OnEntryDoubleClicked.InvokeAsync(entry);
    }

    private void ToggleFullyLoaded() {
        _fullyLoaded = !_fullyLoaded;
    }

    private string UpdateLoadingMsg(string msg) {
        _loadingMsg = msg;
        return _loadingMsg;
    }
}

<div class="loginEntry-section">
    Category: @Category
</div>
<table class="loginEntry-table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Website</th>
            <th>Username</th>
            <th>Password</th>
        </tr>
    </thead>
    @if (!_fullyLoaded) {
        <p>@UpdateLoadingMsg("Loading entries...")</p>
    }
    <tbody>
        @foreach (LoginEntryDTO loginEntry in Entries) {
            <tr @onclick="() => HandleClick(loginEntry)" @ondblclick="() => HandleDoubleClick(loginEntry)">
                <td>@loginEntry.EntryName</td>
                <td><a href="@loginEntry.EntryAddress" target="_blank" rel="noopener norefferer">@loginEntry.EntryAddress</a></td>
                <td>@loginEntry.EntryUsername</td>
                <td>@loginEntry.EntryPassword</td>
            </tr>
        }
        @if (!_fullyLoaded) {
            UpdateLoadingMsg(String.Empty);
            ToggleFullyLoaded();
        }
        @if (_fullyLoaded && Entries.Count <= 0) {
            UpdateLoadingMsg("No Login Entries found...");
        }
    </tbody>
</table>
